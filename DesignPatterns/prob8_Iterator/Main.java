package algorithm;

import java.util.*;

public class Main{
    
    public static void main(String[] args){
        SuperRepeat Repeater = new SuperRepeat();
        Repeater.set(new RepeatOnArrayList());
        Repeater.repeat();
        Repeater.set(new RepeatOnArray());
        Repeater.repeat();
    }
    
}

interface Repeat{
    boolean hasNext();
    void next();
    void print();
}

interface RepeatAble{
    Repeat getRepeat();
}

class SuperRepeat<A extends RepeatAble>{ // ????????? ????????? ???????????? ??? ????????? ??????. C????????? typedef??? ?????? ???????????? ?????????????????? ????????????.
    
    private A repeatTarget;
    private Repeat repeater;
    public SuperRepeat(){};
    
    public void set(A repeatTarget){
        System.out.println(repeatTarget.getClass().getName()); // ???????????? ?????????????????? ????????? ????????? ????????????.
        this.repeater = repeatTarget.getRepeat();
    }
    
    public void repeat(){
        while(repeater.hasNext()) { // ??????????????? ?????? RepeatAble??? ????????????.
            repeater.print(); // ?????????, hasNext()??? ?????? ????????? ?????? ????????? ??????, print??? ????????? ??????????????????.
        }
    }
    
}

class RepeatOnArray implements RepeatAble{
    private int[] arr;
    
    public RepeatOnArray(){
        arr = new int[15];
        for(int i = 0; i < arr.length; i++) arr[i] = i; // ????????? ?????? 0~14????????? ?????? ?????????.
    }
    
    public Repeat getRepeat(){ // ???????????? ???????????? ???????????? RepeatAble??? ????????? ???????????? ?????? ???????????? ????????????.
        return new ArrayRepeater(this.arr);
    }
    
}

class ArrayListRepeater implements Repeat{
    private ArrayList<Integer> arrList; 
    private int index;
    public ArrayListRepeater(ArrayList<Integer> arrList){ // RepeatOnArray??? ?????? arrList ??????????????? ????????????.
        this.arrList = arrList;
        index = -1; 
        // ????????? ???????????? ?????????????????? index ???????????? -1??? ?????????. 
        //????????? ????????? ?????? ??????????????????. 
        //????????? ?????? SuperRepeat???????????? ?????? ??? index??? -1??? ????????? ????????? ????????????.
    }
    
    public boolean hasNext(){ // ??????????????? ?????? ????????? ????????????.
        if(index + 1 < arrList.size()) { // index+1??? ?????? arrList.size()?????? ????????? ?????? ????????? ????????????.
            next();
            return true;
        }
        return false;
    }
    
    public void next(){
        index++;
    }
    
    public void print(){
        if(index < 0) next(); // ?????? index??? -1???????????? ??????????????? ????????? ????????? index < 0 ????????? next??? ????????? ????????? ?????????.
        System.out.print(this.arrList.get(index) + " ");
    }
    
}

class ArrayRepeater implements Repeat{
    private int[] arr;
    private int index;
    public ArrayRepeater(int[] arr){
        this.arr = arr;
        index = -1;
    }
    
    public boolean hasNext(){
        if(index + 1 < arr.length) {
            next();
            return true;
        }
        return false;
    }
    
    public void next(){
        index++;
    }
    
    public void print(){
        if(index < 0) next();
        System.out.print(this.arr[index] + " ");
    }
    
}

class RepeatOnArrayList implements RepeatAble{
    private ArrayList<Integer> arrList;
    
    public RepeatOnArrayList(){ 
        arrList = new ArrayList<Integer>();
        for(int i = 0; i < 15; i++) arrList.add(i); // ????????? ?????? 0~14????????? ?????? ?????????.
    }
    
    public Repeat getRepeat(){ // ???????????? ???????????? ???????????? RepeatAble??? ????????? ???????????? ?????? ???????????? ????????????.
        return new ArrayListRepeater(this.arrList);
    }
    
}